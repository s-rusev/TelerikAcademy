/* 
 * Developed by: Team Orange / Telerik Academy
 * Title: Tank
 * Module: User Interface
 * Author: Stamo Petkov
 */

var ui = (function() {
   var Directions = Object.freeze({
            UP: "up",
            DOWN: "down",
            LEFT: "left",
            RIGHT: "right",
            STOP: "stop"
        }),
        Commands = Object.freeze({
            FIRE: "fire",
            QUIT: "quit",
            PAUSE: "pause"
        }),
        directionSet = false,
        bulletFired = false;
   
    // UI Initialization begin
    $(document).ready(function() {
        $("body").on("keydown", getKey);
    });
    $(document).ready(function() {
        $("body").on("keyup", getKeyUp);
    });
     // UI Initialization end
    
   function login() {
       
   }
   
   function register() {
       
   }
   
   //This method handles onKeyDown event
    function getKey(evt) {
        switch (evt.keyCode) {
            //Left arrow key, triggers changeDirrection event with direction: LEFT
            case 37:
                evt.preventDefault();
                if (!directionSet) {
                    $("body").trigger({
                        type:"changeDirrection",
                        direction: Directions.LEFT
                    });
                    directionSet = true;
                }
                break;
            //Up arrow key, triggers changeDirrection event with direction: UP
            case 38:
                evt.preventDefault();
                if (!directionSet) {
                    $("body").trigger({
                        type:"changeDirrection",
                        direction: Directions.UP
                    });
                    directionSet = true;
                }
                break;
            //Right arrow key, triggers changeDirrection event with direction: RIGHT
            case 39:
                evt.preventDefault();
                if (!directionSet) {
                    $("body").trigger({
                        type:"changeDirrection",
                        direction: Directions.RIGHT
                    });
                    directionSet = true;
                }
                break;
            //Down arrow key, triggers changeDirrection event with direction: DOWN
            case 40:
                evt.preventDefault();
                if (!directionSet) {
                    $("body").trigger({
                        type:"changeDirrection",
                        direction: Directions.DOWN
                    });
                    directionSet = true;
                }
                break;
            //Letter "q" pressed, triggers executeCommand event with command: QUIT
            case 81:
                $("body").trigger({
                    type:"executeCommand",
                    command: Commands.QUIT
                });
                break;
            //Letter "p" pressed, triggers executeCommand event with command: PAUSE
            case 80:
                $("body").trigger({
                    type:"executeCommand",
                    command: Commands.PAUSE
                });
                break;
            //Space bar pressed, triggers executeCommand event with command: FIRE
            case 32:
                evt.preventDefault();
                if (!bulletFired) {
                    $("body").trigger({
                        type:"executeCommand",
                        command: Commands.FIRE
                    });
                    bulletFired = true;
                }
                
                break;
            default:
        }
    }

    function getKeyUp(evt) {
        if (evt.keyCode === 37 || evt.keyCode === 38 || evt.keyCode === 39 || evt.keyCode === 40) {
            evt.preventDefault();
            $("body").trigger({
                type:"changeDirrection",
                direction: Directions.STOP
            });
            directionSet = false;
        } else if (evt.keyCode === 32) {
            bulletFired = false;
        }
    }
    
    return {
        
    };
}());